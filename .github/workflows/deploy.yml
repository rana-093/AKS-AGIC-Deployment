name: AKS Deployment

on:
  push:
    branches: ["main"]

env:
  REGISTRY_NAME: seliseassesment3
  CLUSTER_NAME: aks-demo
  RESOURCE_GROUP: k8s
  NAMESPACE: default
  IMAGE_TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Install kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.28.0"

      - name: Set Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build image and push to ACR
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/nodeapp:${IMAGE_TAG}
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/nodeapp:${IMAGE_TAG}
        env:
         IMAGE_TAG: ${{ github.sha }}

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      - name: Create Secret
        uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
          container-registry-username: ${{ secrets.ACR_USERNAME }}
          container-registry-password: ${{ secrets.ACR_PASSWORD }}
          secret-name: registry-connection
          namespace: ${{ env.NAMESPACE }}

      - name: Substitute variables in deployment.yaml
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "Image tag: $IMAGE_TAG"
          envsubst < deployment.yaml > deployment_temp.yaml
        env:
          IMAGE_TAG: ${{ needs.build.outputs.IMAGE_TAG }}

      - name: Deploy
        run: |
          kubectl apply -f deployment_temp.yaml
          kubectl apply -f service.yaml
